{"version":3,"sources":["components/Slider/index.module.scss","components/ShowPattern/index.module.scss","globalState/index.ts","components/Slider/index.tsx","components/CanvasSetting/index.tsx","components/draw/drawRect.ts","components/ShowPattern/drawUtils/performanceTest.ts","components/drawTree/vector2d.js","components/drawTree/drawTree.ts","components/ShowPattern/index.tsx","pages/App/index.tsx","index.tsx","components/CanvasSetting/index.module.scss","pages/App/index.module.scss"],"names":["module","exports","initData","drawType","fillColor","strokeColor","lineW","lineType","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","scale","rotate","opacity","textInput","fontSize","textAlign","textBaseline","textDir","imgUrl","sliceX","sliceY","originX","originY","rectParams","x","y","width","height","oCoords","tl","tr","br","bl","lines","topLine","o","d","leftLine","rightLine","bottomLine","controlPoints","controlPointsType","isRectSelected","reducer","state","action","type","data","Object","assign","ContextData","createContext","initCanvasOpt","canvasDom","ctx","canvasW","canvasH","Slider","props","onChange","text","value","canvasRef","useRef","useState","canvasOpt","setCanvasOpt","isMove","setIsMove","useContext","useEffect","initCanvas","changeArc","clearRect","onclick","e","onmousemove","onmousedown","document","onmouseup","current","_canvasDom","getContext","getBoundingClientRect","positionX","pageX","xMax","num","parseInt","toFixed","beginPath","lineCap","fillStyle","fillRect","stroke","drawLine","arc","Math","PI","fill","closePath","drawArc","className","styles","sliderCanvas_wrap","ref","sliderCanvas","rate_text","CanvasSetting","dispatch","changeState","changeColorState","target","changeSelect","setting_wrap","title_wrap","setting_title","reset_btn","onClick","setting_main","placeholder","select_diy","lineBox","pointBox","point","b2","xi","iLine","xCount","lineKey","filterPoints","drawControl","realRotate","callback","save","translate","strokeStyle","strokeRect","restore","newControlPoints","map","itemPoints","getEndPointByRotate","forEach","item","drawRectBox","startPoint","centerPoint","angle","centerX","centerY","x1","y1","x2","cos","sin","y2","getControlIndex","i","eventX","floor","clientX","left","eventY","clientY","top","index","cursorStyle","range","style","cursor","getCursorStyle","useDrawRect","isDrag","controlIndex","isScale","isSelectedControl","isSelected","Number","offsetX","offsetY","sqrt","pow","atan2","movementX","movementY","Vector2D","this","v","hypot","a","length","rad","c","s","Array","drawBranch","v0","thickness","dir","bias","v1","copy","add","lineWidth","moveTo","lineTo","leftRadius","random","rightRadius","th","drawTree","shapeTypes","_window","window","optionObj","showFilter","countArr","TEXTX","TEXTHEIGHT","itemW","optionPoints","clickIndex","count","performanceTest","time","oldFps","push","filterLines","requestAnimationFrame","draw","upDateTime","newRafId","fps","filter","font","fillText","toString","optionTab","ofc","OffscreenCanvas","octX","shapes","ret","cacheCanvas","context","r","g","b","drawPolygon","getPoints","createCache","shape","drawImage","performance","now","edge","points","edgeRotate","pointX","pointY","ShowPattern","canvasWrapRef","webglRef","showCanvas","setShowCanvas","rafId","pointsArr","eyePosition","eyeBallX","eyeBallY","realScale","realOpacity","cancelAnimationFrame","removeEventListener","eyeBallMove","addEventListener","globalAlpha","setLineDash","lineDashOffset","drawTriangle","drawText","drawDuola","drawQuadratic","drawBezier","drawImageHandler","drawRect","rotateData","gl","clear","COLOR_BUFFER_BIT","webglDraw","webglClickDraw","timer","direction","quadraticCurveTo","bezierCurveTo","img","Image","src","onload","translateX","translateY","newEyePosition","clearTimeout","setTimeout","_timer","moveX","moveY","distance","distanceTime","eyeBallSpeedX","eyeBallSpeedY","clearInterval","setInterval","ellipse","vsShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fsShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","useProgram","drawArrays","POINTS","pageY","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","a_position","getAttribLocation","vertexAttribPointer","FLOAT","enableVertexAttribArray","showPattern_wrap","webgl_canvas","display","menuList","key","App","useReducer","Provider","app","app_left","left_title","menu_list","menu_item","menu_item_active","app_right","canvas_settings","canvas_wrap","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bba19df1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sliderCanvas_wrap\":\"Slider_sliderCanvas_wrap__1KOHy\",\"sliderCanvas\":\"Slider_sliderCanvas__3mqz9\",\"rate_text\":\"Slider_rate_text__1Htey\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showPattern_wrap\":\"ShowPattern_showPattern_wrap__1NLEA\",\"webgl_canvas\":\"ShowPattern_webgl_canvas__2YlOs\"};","import { createContext } from \"react\";\n\n//初始数据\nconst initData = {\n    drawType: null,  // 绘制图案的类型\n    fillColor: '#000',  // 填充颜色\n    strokeColor: '#000', // 线框颜色\n    lineW: 0,   // 线宽\n    lineType: 'solid', // 线的类型\n    shadowBlur: 0, // 阴影模糊半径\n    shadowOffsetX: 0, // 阴影X轴偏移量\n    shadowOffsetY: 0, // 阴影Y轴偏移量\n    shadowColor: '#000', // 阴影颜色\n    scale: 50, // 缩放\n    rotate: 0, // 旋转\n    opacity: 100, // 不透明度\n    textInput: 'Canvas实验室', // 文本内容\n    fontSize: '36', // 文本字体大小\n    textAlign: 'left', // 文本对齐方式\n    textBaseline: 'top', // 文本基线对齐\n    textDir: 'ltr', // 文本方向\n    imgUrl: 'http://pic.616pic.com/ad_preview/00/09/19/5d50c8bfe378b.jpg-0.jpg!/fw/800/quality/90/unsharp/true/compress/true?%3E', // 图片地址\n    sliceX: 0, // 切片X\n    sliceY: 0, // 切片Y\n    originX: 0, // 原点坐标X\n    originY: 0, // 原点坐标Y\n    rectParams: {\n        x: 50,\n        y: 50,\n        width: 100,\n        height: 100,\n        oCoords: {\n            tl: { x: 50, y: 50 },\n            tr: { x: 150, y: 50 },\n            br: { x: 150, y: 150 },\n            bl: { x: 50, y: 150 },\n        },\n        lines: {\n            // 上\n            topLine: {\n                o: { x: 50, y: 50 },\n                d: { x: 150, y: 50 },\n            },\n            // 左\n            leftLine: {\n                o: { x: 50, y: 50 },\n                d: { x: 50, y: 150 },\n            },\n            // 右\n            rightLine: {\n                o: { x: 150, y: 50 },\n                d: { x: 150, y: 150 },\n            },\n            // 下\n            bottomLine: {\n                o: { x: 50, y: 150 },\n                d: { x: 150, y: 150 },\n            },\n        },\n        // 减5是因为控制点宽高是10\n        controlPoints: [\n            { x: 50 - 5, y: 50 - 5 },     // tl\n            { x: 150 - 5, y: 50 - 5 },    // tr\n            { x: 50 - 5, y: 150 - 5 },    // bl\n            { x: 150 - 5, y: 150 - 5 },   // br\n            { x: 100 - 5, y: 50 - 5 },    // tc\n            { x: 100 - 5, y: 150 - 5 },   // bc\n            { x: 50 - 5, y: 100 - 5 },    // lc\n            { x: 150 - 5, y: 100 - 5 },   // rc\n            { x: 100 - 5, y: 50 - 40 }   // rp rotate point旋转点\n        ],\n        controlPointsType: ['tl', 'tr', 'bl', 'br', 'tc', 'bc', 'lc', 'rc', 'rp'],\n        isRectSelected: false\n    }\n};\n\n// 派发事件\nconst reducer = (state, action) => {\n    switch (action.type) {\n        // 初始化数据\n        case \"resetState\":\n            return { ...initData, drawType: 'reset' }\n        // 改变数据\n        case \"changeState\":\n            return { ...state, ...action.data };\n        // 改变矩形数据\n        case \"changeRect\":\n            return Object.assign(state, { rectParams: { ...action.data } });\n        default:\n            return state\n    }\n}\n\nconst ContextData: any = createContext({});\n\nexport { initData, reducer, ContextData }","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useContext, useRef, useState } from \"react\";\nimport styles from \"./index.module.scss\";\nimport { ContextData } from \"../../globalState\";\n\ninterface IProps {\n  text?: string; // 文本\n  onChange?: (val: number) => void; // 数值改变\n  value?: number; // 数值\n  min?: number;\n  max?: number;\n  type?: string;\n}\ninterface ICanvasOpt {\n  canvasDom: HTMLElement | null;\n  ctx: any;\n  canvasW: number;\n  canvasH: number;\n}\n\nconst initCanvasOpt: ICanvasOpt = {\n  canvasDom: null,\n  ctx: null,\n  canvasW: 0,\n  canvasH: 0,\n};\n\nfunction Slider(props: IProps): JSX.Element {\n  const { onChange, text, value, type } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [canvasOpt, setCanvasOpt] = useState<ICanvasOpt>(initCanvasOpt);\n  const [isRender, setIsRender] = useState<boolean>(false);\n  const [isMove, setIsMove] = useState<boolean>(false);\n\n  const { state } = useContext(ContextData);\n\n  useEffect(() => {\n    initCanvas();\n  }, []);\n\n  useEffect(() => {\n    if (value && canvasOpt.canvasDom) {\n      // setIsRender(true);\n      changeArc({ value });\n    }\n  }, [canvasOpt, value]);\n\n  // useEffect(() => {\n  //   if (value && isRender) {\n  //     changeArc({ value });\n  //   }\n  // }, [isRender]);\n\n  useEffect(() => {\n    if (state.drawType === \"reset\") {\n      const { ctx, canvasW, canvasH } = canvasOpt;\n      ctx.clearRect(0, 0, canvasW, canvasH);\n      changeArc({ value });\n    }\n  }, [state.drawType]);\n\n  // 当canvas的dom获取时渲染\n  useEffect(() => {\n    const { canvasDom } = canvasOpt;\n    if (!canvasDom) {\n      return;\n    }\n    changeArc({ value });\n    canvasDom.onclick = e => changeArc({ e });\n    canvasDom.onmousemove = null;\n    canvasDom.onmousedown = e => {\n      setIsMove(true);\n      changeArc({ e });\n    };\n    canvasDom.onmousemove = e => {\n      if (isMove) {\n        changeArc({ e });\n      }\n    };\n    document.onmouseup = () => {\n      setIsMove(false);\n      canvasDom.onmousemove = null;\n    };\n  }, [canvasOpt, isMove]);\n\n  //   初始化canvas的配置数据\n  const initCanvas = () => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const _canvasDom = canvasRef.current;\n    setCanvasOpt({\n      ...canvasOpt,\n      canvasDom: _canvasDom,\n      ctx: _canvasDom.getContext(\"2d\"),\n      canvasW: _canvasDom.width,\n      canvasH: _canvasDom.height,\n    });\n  };\n\n  //  绘制中间的线\n  const drawLine = (ctx, canvasW) => {\n    ctx.beginPath();\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"#ccc\";\n    ctx.fillRect(0, 4, canvasW, 2);\n    ctx.stroke();\n  };\n\n  //绘制圆点\n  const drawArc = (ctx, x = 5) => {\n    ctx.beginPath();\n    ctx.fillStyle = \"#000\";\n    ctx.arc(x, 5, 5, 0, Math.PI * 2, false);\n    ctx.fill();\n    ctx.closePath();\n  };\n\n  // 点击改变圆点的位置\n  const changeArc = ({ e, value }: { e?: MouseEvent; value?: number }) => {\n    const { ctx, canvasW, canvasH, canvasDom } = canvasOpt;\n    const { x } = canvasDom!.getBoundingClientRect();\n    let positionX = e ? e!.pageX - x : value!;\n    let xMax = canvasW - 5; // 能移动的最大距离\n    let xMin = 5; // 能移动的最小距离(半径)\n    // 鼠标点击大于圆的半径\n    if (positionX >= xMax) {\n      positionX = xMax;\n      onChange && onChange(100);\n    } else if (positionX <= xMin) {\n      // 鼠标点击小于圆的半径\n      positionX = xMin;\n      onChange && onChange(0);\n    } else {\n      let num = parseInt(\n        (((positionX - xMin) / (xMax - xMin)) * 100).toFixed(2)\n      );\n      onChange && onChange(value || num);\n    }\n    ctx.clearRect(0, 0, canvasW, canvasH);\n    drawLine(ctx, canvasW);\n    drawArc(ctx, positionX);\n    // 绘制进度条\n    ctx.lineCap = \"round\";\n    ctx.fillRect(0, 3, positionX, 4);\n  };\n\n  return (\n    <div className={styles.sliderCanvas_wrap}>\n      {text || \"\"}\n      <canvas\n        ref={canvasRef}\n        className={styles.sliderCanvas}\n        width=\"100\"\n        height=\"10\"\n      ></canvas>\n      <span className={styles.rate_text}>\n        {type === \"rotate\" ? ((value || 0) * 3.6).toFixed(0) : value}\n      </span>\n    </div>\n  );\n}\n\nexport default Slider;\n","import React, { useContext } from \"react\";\nimport styles from \"./index.module.scss\";\nimport { ContextData } from \"../../globalState\";\nimport Slider from \"../Slider\";\n\nfunction CanvasSetting(): JSX.Element {\n  const { state, dispatch } = useContext(ContextData);\n\n  const changeState = (type, data) => {\n    dispatch({\n      type: \"changeState\",\n      data: { [type]: data },\n    });\n  };\n\n  // 改变颜色\n  const changeColorState = (e, type) => {\n    dispatch({\n      type: \"changeState\",\n      data: { [type]: e.target.value ? e.target.value : \"#000\" },\n    });\n  };\n\n  //   select改变\n  const changeSelect = (e, type) => {\n    dispatch({\n      type: \"changeState\",\n      data: { [type]: e.target.value },\n    });\n  };\n\n  return (\n    <div className={styles.setting_wrap}>\n      <div className={styles.title_wrap}>\n        <h1 className={styles.setting_title}>Canvas配置</h1>\n        <button\n          className={styles.reset_btn}\n          onClick={() => {\n            dispatch({\n              type: \"resetState\",\n            });\n          }}\n        >\n          初始化数据\n        </button>\n      </div>\n\n      <section className={styles.setting_main}>\n        <Slider\n          text=\"线宽：\"\n          onChange={data => changeState(\"lineW\", data)}\n          value={state.lineW}\n        />\n        <Slider\n          text=\"阴影模糊半径：\"\n          onChange={data => changeState(\"shadowBlur\", data)}\n          value={state.shadowBlur}\n        />\n        <Slider\n          text=\"阴影X轴偏移量：\"\n          onChange={data => {\n            changeState(\"shadowOffsetX\", data);\n          }}\n          value={state.shadowOffsetX}\n        />\n        <Slider\n          text=\"阴影Y轴偏移量：\"\n          onChange={data => changeState(\"shadowOffsetY\", data)}\n          value={state.shadowOffsetY}\n        />\n        <Slider\n          text=\"缩放：\"\n          onChange={data => changeState(\"scale\", data)}\n          value={state.scale}\n        />\n        <Slider\n          text=\"旋转：\"\n          onChange={data => changeState(\"rotate\", data)}\n          type=\"rotate\"\n          value={state.rotate}\n        />\n        <Slider\n          text=\"不透明度：\"\n          onChange={data => changeState(\"opacity\", data)}\n          value={state.opacity}\n        />\n        <div>\n          阴影颜色：\n          <input\n            type=\"text\"\n            value={state.shadowColor}\n            onChange={e => changeColorState(e, \"shadowColor\")}\n            placeholder=\"请输入阴影颜色\"\n          />\n        </div>\n        <div>\n          填充颜色：\n          <input\n            type=\"text\"\n            value={state.fillColor}\n            onChange={e => changeColorState(e, \"fillColor\")}\n            placeholder=\"请输入填充颜色\"\n          />\n        </div>\n        <div>\n          边框颜色：\n          <input\n            type=\"text\"\n            value={state.strokeColor}\n            onChange={e => changeColorState(e, \"strokeColor\")}\n            placeholder=\"请输入边框颜色\"\n          />\n        </div>\n        <div>\n          线的类型：\n          <select\n            value={state.lineType}\n            onChange={e => changeSelect(e, \"lineType\")}\n            className={styles.select_diy}\n          >\n            <option value=\"solid\">实线</option>\n            <option value=\"dash\">虚线</option>\n          </select>\n        </div>\n        {state.drawType === \"4\" ? (\n          <>\n            <div>\n              文本内容：\n              <input\n                type=\"text\"\n                value={state.textInput}\n                placeholder=\"请输入文本内容\"\n                onChange={e => changeState(\"textInput\", e.target.value)}\n              />\n            </div>\n            <div>\n              字体大小：\n              <select\n                value={state.fontSize}\n                onChange={e => changeSelect(e, \"fontSize\")}\n                className={styles.select_diy}\n              >\n                <option value=\"36\">36</option>\n                <option value=\"44\">44</option>\n                <option value=\"56\">56</option>\n              </select>\n            </div>\n            <div>\n              对齐方式：\n              <select\n                value={state.textAlign}\n                onChange={e => changeSelect(e, \"textAlign\")}\n                className={styles.select_diy}\n              >\n                <option value=\"left\">左对齐</option>\n                <option value=\"center\">居中对齐</option>\n                <option value=\"right\">右对齐</option>\n              </select>\n            </div>\n            <div>\n              基线对齐：\n              <select\n                value={state.textBaseline}\n                onChange={e => changeSelect(e, \"textBaseline\")}\n                className={styles.select_diy}\n              >\n                <option value=\"top\">顶部</option>\n                <option value=\"middle\">居中</option>\n                <option value=\"bottom\">底部</option>\n              </select>\n            </div>\n            <div>\n              文本方向：\n              <select\n                value={state.textDir}\n                onChange={e => changeSelect(e, \"textDir\")}\n                className={styles.select_diy}\n              >\n                <option value=\"ltr\">从左向右</option>\n                <option value=\"rtl\">从右向左</option>\n              </select>\n            </div>\n          </>\n        ) : null}\n\n        {state.drawType === \"10\" ? (\n          <>\n            <div>\n              图片地址：\n              <input\n                type=\"text\"\n                value={state.imgUrl}\n                placeholder=\"请输入图片地址\"\n                onChange={e => changeState(\"imgUrl\", e.target.value)}\n              />\n            </div>\n            <Slider\n              text=\"切片X：\"\n              onChange={data => changeState(\"sliceX\", data)}\n              value={state.sliceX}\n            />\n            <Slider\n              text=\"切片Y：\"\n              onChange={data => changeState(\"sliceY\", data)}\n              value={state.sliceY}\n            />\n            <Slider\n              text=\"原点坐标X：\"\n              onChange={data => changeState(\"originX\", data)}\n              value={state.originX}\n            />\n            <Slider\n              text=\"原点坐标Y：\"\n              onChange={data => changeState(\"originY\", data)}\n              value={state.originY}\n            />\n          </>\n        ) : null}\n      </section>\n    </div>\n  );\n}\n\nexport default CanvasSetting;\n","interface linesItem {\n  o: controlPointsItem;\n  d: controlPointsItem;\n}\ninterface ILines {\n  // 上\n  topLine: linesItem;\n  // 左\n  leftLine: linesItem;\n  // 右\n  rightLine: linesItem;\n  // 下\n  bottomLine: linesItem;\n}\ninterface controlPointsItem {\n  x: number;\n  y: number;\n}\n\n/**\n * 判断鼠标样式\n */\nconst getCursorStyle = (canvasDom, index, realRotate) => {\n  let cursorStyle = '';\n  const rotate = (realRotate * 180) / Math.PI;\n  const range = rotate / 45;\n  switch (index) {\n    case 0:\n      if (range <= 1) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'se-resize';\n      } else if (range <= 5) {\n        cursorStyle = 's-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'nw-resize';\n      }\n      break;\n    case 1:\n      if (range <= 1) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'se-resize';\n      } else if (range <= 4) {\n        cursorStyle = 's-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'ne-resize';\n      }\n      break;\n    case 2:\n      if (range <= 1) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'se-resize';\n      } else if (range <= 7) {\n        cursorStyle = 's-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'sw-resize';\n      }\n      break;\n    case 3:\n      if (range <= 1) {\n        cursorStyle = 'se-resize';\n      } else if (range <= 2) {\n        cursorStyle = 's-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'se-resize';\n      }\n      break;\n    case 4:\n      if (range <= 1) {\n        cursorStyle = 'n-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 4) {\n        cursorStyle = 's-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'n-resize';\n      }\n      break;\n    case 5:\n      if (range <= 1) {\n        cursorStyle = 's-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'n-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 8) {\n        cursorStyle = 's-resize';\n      }\n      break;\n    case 6:\n      if (range <= 1) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 2) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'n-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 6) {\n        cursorStyle = 's-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'w-resize';\n      }\n      break;\n    case 7:\n      if (range <= 1) {\n        cursorStyle = 'e-resize';\n      } else if (range <= 2) {\n        cursorStyle = 's-resize';\n      } else if (range <= 3) {\n        cursorStyle = 'sw-resize';\n      } else if (range <= 4) {\n        cursorStyle = 'w-resize';\n      } else if (range <= 5) {\n        cursorStyle = 'nw-resize';\n      } else if (range <= 6) {\n        cursorStyle = 'n-resize';\n      } else if (range <= 7) {\n        cursorStyle = 'ne-resize';\n      } else if (range <= 8) {\n        cursorStyle = 'e-resize';\n      }\n      break;\n    case 8:\n      cursorStyle = 'move';\n      break;\n    default:\n      cursorStyle = 'default';\n      break;\n  }\n  canvasDom.style.cursor = cursorStyle;\n};\n\n/**\n * 获取线段\n */\nexport function lineBox(oCoords: any) {\n  var lines: any = {\n    topLine: {\n      o: oCoords.tl,\n      d: oCoords.tr,\n    },\n    rightLine: {\n      o: oCoords.tr,\n      d: oCoords.br,\n    },\n    bottomLine: {\n      o: oCoords.br,\n      d: oCoords.bl,\n    },\n    leftLine: {\n      o: oCoords.bl,\n      d: oCoords.tl,\n    },\n  };\n  return lines;\n}\n/**\n * 判断是否在点击区域内，当为xCount为1时才是在点击区域\n */\nexport function pointBox(point: { y: number; x: number }, lines: any) {\n  var b1,\n    b2,\n    a1,\n    a2,\n    xi,\n    xCount = 0,\n    iLine;\n\n  for (var lineKey in lines) {\n    iLine = lines[lineKey];\n    if (iLine.o.y < point.y && iLine.d.y < point.y) {\n      continue;\n    }\n    if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n      continue;\n    }\n    if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n      xi = iLine.o.x;\n    } else {\n      b1 = 0;\n      b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n      a1 = point.y - b1 * point.x;\n      a2 = iLine.o.y - b2 * iLine.o.x;\n\n      xi = -(a1 - a2) / (b1 - b2);\n    }\n\n    if (xi >= point.x) {\n      xCount += 1;\n    }\n\n    if (xCount === 2) {\n      break;\n    }\n  }\n\n  return xCount === 1;\n}\n\n/**\n * 绘制控制器的线段和点\n */\nconst drawControl = (\n  ctx,\n  controlPoints,\n  x,\n  y,\n  width,\n  height,\n  realRotate,\n  callback\n) => {\n  ctx.save();\n  ctx.translate(x + width / 2, y + height / 2);\n  ctx.rotate(realRotate);\n  ctx.translate(-(x + width / 2), -(y + height / 2));\n  ctx.strokeStyle = '#f40';\n  ctx.strokeRect(x, y, width, height);\n  ctx.restore();\n  ctx.save();\n  const newControlPoints = controlPoints.map((itemPoints) =>\n    getEndPointByRotate(\n      [itemPoints.x, itemPoints.y],\n      [x + width / 2, y + height / 2],\n      realRotate\n    )\n  );\n  ctx.strokeStyle = '#f40';\n  ctx.fillStyle = '#f40';\n  newControlPoints.forEach((item) => {\n    ctx.save();\n    ctx.translate(item.x, item.y);\n    ctx.rotate(realRotate);\n    ctx.translate(-item.x, -item.y);\n    ctx.fillRect(item.x, item.y, 10, 10);\n    ctx.restore();\n  });\n  let lines: any = {};\n\n  lines.topLine = {\n    o: getEndPointByRotate([x, y], [x + width / 2, y + height / 2], realRotate),\n    d: getEndPointByRotate(\n      [x + width, y],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n  };\n  lines.leftLine = {\n    o: getEndPointByRotate([x, y], [x + width / 2, y + height / 2], realRotate),\n    d: getEndPointByRotate(\n      [x, y + height],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n  };\n  lines.rightLine = {\n    o: getEndPointByRotate(\n      [x + width, y],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n    d: getEndPointByRotate(\n      [x + width, y + height],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n  };\n  lines.bottomLine = {\n    o: getEndPointByRotate(\n      [x, y + height],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n    d: getEndPointByRotate(\n      [x + width, y + height],\n      [x + width / 2, y + height / 2],\n      realRotate\n    ),\n  };\n  ctx.restore();\n  callback(lines, newControlPoints);\n};\n\n/**\n * 绘制矩形\n */\nconst drawRectBox = (ctx, x, y, width, height, realRotate) => {\n  ctx.save();\n  ctx.fillStyle = '#000';\n  ctx.translate(x + width / 2, y + height / 2);\n  ctx.rotate(realRotate);\n  ctx.translate(-(x + width / 2), -(y + height / 2));\n  ctx.fillRect(x, y, width, height);\n  ctx.restore();\n};\n\n/**\n * 得到控制点旋转之后的坐标\n */\nconst getEndPointByRotate = (\n  startPoint: number[],\n  centerPoint: number[],\n  angle: number = 0\n) => {\n  const [centerX, centerY] = centerPoint;\n  const [x1, y1] = [startPoint[0] - centerX, startPoint[1] - centerY];\n  const x2 = x1 * Math.cos(angle) - y1 * Math.sin(angle);\n  const y2 = x1 * Math.sin(angle) + y1 * Math.cos(angle);\n  return { x: x2 + centerX, y: y2 + centerY };\n};\n\n/**\n * 获取点击控制器的坐标\n */\nconst getControlIndex = (\n  e,\n  canvasDom,\n  controlPoints,\n  realRotate,\n  x,\n  y,\n  width,\n  height\n) => {\n  let i = null;\n  let eventX = Math.floor(e.clientX - canvasDom.getBoundingClientRect().left);\n  let eventY = Math.floor(e.clientY - canvasDom.getBoundingClientRect().top);\n  const newControlPoints = controlPoints.map((itemPoints) =>\n    getEndPointByRotate(\n      [itemPoints.x, itemPoints.y],\n      [x + width / 2, y + height / 2],\n      realRotate\n    )\n  );\n  newControlPoints.forEach((item, index) => {\n    const oCoords = {\n      tl: getEndPointByRotate([item.x, item.y], [item.x, item.y], realRotate),\n      tr: getEndPointByRotate(\n        [item.x + 10, item.y],\n        [item.x, item.y],\n        realRotate\n      ),\n      br: getEndPointByRotate(\n        [item.x + 10, item.y + 10],\n        [item.x, item.y],\n        realRotate\n      ),\n      bl: getEndPointByRotate(\n        [item.x, item.y + 10],\n        [item.x, item.y],\n        realRotate\n      ),\n    };\n    const lines = lineBox(oCoords);\n\n    if (pointBox({ x: eventX, y: eventY }, lines)) {\n      i = index;\n    }\n  });\n  getCursorStyle(canvasDom, i, realRotate);\n  return i;\n};\n\nconst useDrawRect = (ctx, canvasDom, state, type, callback) => {\n  ctx.restore();\n  const { rectParams, rotate } = state;\n  let lines: ILines = rectParams.lines;\n  let oCoords = rectParams.oCoords;\n  let controlPoints: controlPointsItem[] = rectParams.controlPoints;\n  let { x, y, width, height } = rectParams;\n  let isRectSelected = false; // 是否选中\n  let realRotate = rotate * 3.6 * (Math.PI / 180);\n  let isDrag = false;\n  let controlIndex: null | number = null; // 控制器坐标\n  let isScale: boolean = false;\n\n  // 判断是否点击中图形\n  const isSelected = (e) => {\n    let eventX = Math.floor(e.clientX - canvasDom.getBoundingClientRect().left);\n    let eventY = Math.floor(e.clientY - canvasDom.getBoundingClientRect().top);\n\n    lines = lineBox(oCoords);\n\n    // 是否点击了控制器\n    let isSelectedControl = false;\n    const newControlPoints = controlPoints.map((itemPoints) =>\n      getEndPointByRotate(\n        [itemPoints.x, itemPoints.y],\n        [x + width / 2, y + height / 2],\n        realRotate\n      )\n    );\n    newControlPoints.forEach((item, index) => {\n      const oCoords = {\n        tl: getEndPointByRotate([item.x, item.y], [item.x, item.y], realRotate),\n        tr: getEndPointByRotate(\n          [item.x + 10, item.y],\n          [item.x, item.y],\n          realRotate\n        ),\n        br: getEndPointByRotate(\n          [item.x + 10, item.y + 10],\n          [item.x, item.y],\n          realRotate\n        ),\n        bl: getEndPointByRotate(\n          [item.x, item.y + 10],\n          [item.x, item.y],\n          realRotate\n        ),\n      };\n      const lines = lineBox(oCoords);\n\n      if (pointBox({ x: eventX, y: eventY }, lines)) {\n        isSelectedControl = true;\n      }\n    });\n\n    return (\n      pointBox({ x: eventX, y: eventY }, lines) ||\n      (isRectSelected && isSelectedControl)\n    );\n  };\n\n  if (type === 'rotate') {\n    ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n    drawRectBox(ctx, x, y, width, height, realRotate);\n    isRectSelected = true;\n    if (rectParams.isRectSelected) {\n      drawControl(\n        ctx,\n        controlPoints,\n        x,\n        y,\n        width,\n        height,\n        realRotate,\n        (data) => (lines = data)\n      );\n    }\n  } else {\n    ctx.save();\n    ctx.fillRect(\n      rectParams.x,\n      rectParams.y,\n      rectParams.width,\n      rectParams.height\n    );\n    ctx.restore();\n  }\n  canvasDom.onmousedown = null;\n  canvasDom.onmouseup = null;\n  canvasDom.onmousemove = null;\n  canvasDom.onmousedown = (e) => {\n    if (isSelected(e)) {\n      controlIndex = getControlIndex(\n        e,\n        canvasDom,\n        controlPoints,\n        realRotate,\n        x,\n        y,\n        width,\n        height\n      );\n      // 如果鼠标没在控制点上就允许拖拽\n      isDrag = controlIndex === null;\n      isScale = controlIndex !== null;\n      isRectSelected = true;\n      drawRectBox(ctx, x, y, width, height, realRotate);\n      drawControl(\n        ctx,\n        controlPoints,\n        x,\n        y,\n        width,\n        height,\n        realRotate,\n        (data) => (lines = data)\n      );\n    } else {\n      isRectSelected = false;\n      callback({ ...rectParams, isRectSelected });\n      ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n      drawRectBox(ctx, x, y, width, height, realRotate);\n    }\n  };\n  canvasDom.onmouseup = () => {\n    isDrag = false;\n    isScale = false;\n    drawRectBox(ctx, x, y, width, height, realRotate);\n    if (isRectSelected) {\n      drawControl(\n        ctx,\n        controlPoints,\n        x,\n        y,\n        width,\n        height,\n        realRotate,\n        (data) => (lines = data)\n      );\n    }\n\n    oCoords = {\n      tl: getEndPointByRotate(\n        [x, y],\n        [x + width / 2, y + height / 2],\n        realRotate\n      ),\n      tr: getEndPointByRotate(\n        [x + width, y],\n        [x + width / 2, y + height / 2],\n        realRotate\n      ),\n      br: getEndPointByRotate(\n        [x + width, y + height],\n        [x + width / 2, y + height / 2],\n        realRotate\n      ),\n      bl: getEndPointByRotate(\n        [x, y + height],\n        [x + width / 2, y + height / 2],\n        realRotate\n      ),\n    };\n\n    if (controlIndex! === 8) {\n      callback(\n        {\n          ...rectParams,\n          x,\n          y,\n          lines,\n          controlPoints,\n          isRectSelected,\n          oCoords,\n          width,\n          height,\n        },\n        { rotate: Number(((realRotate * 180) / Math.PI / 3.6).toFixed(0)) }\n      );\n    } else {\n      callback({\n        ...rectParams,\n        x,\n        y,\n        lines,\n        controlPoints,\n        isRectSelected,\n        oCoords,\n        width,\n        height,\n      });\n    }\n  };\n\n  canvasDom.onmousemove = (e) => {\n    if (isScale) {\n      if (controlIndex! < 4) {\n        const centerX = x + width / 2;\n        const centerY = y + height / 2;\n        const x1 = x;\n        const y1 = y;\n        const x2 = e.offsetX;\n        const y2 = e.offsetY;\n        const scaleStart = Math.sqrt(\n          Math.pow(centerX - x1, 2) + Math.pow(centerY - y1, 2)\n        );\n        const scaleEnd = Math.sqrt(\n          Math.pow(centerX - x2, 2) + Math.pow(centerY - y2, 2)\n        );\n        const scale = scaleStart / scaleEnd;\n\n        x = x - ((1 - scale) / 2) * width;\n        y = y - ((1 - scale) / 2) * height;\n        width += (1 - scale) * width;\n        height += (1 - scale) * height;\n\n        // ['tl', 'tr', 'bl', 'br', 'tc', 'bc', 'lc', 'rc', 'rp']\n        controlPoints[0] = { x: x - 5, y: y - 5 };\n        controlPoints[1] = { x: x + width - 5, y: y - 5 };\n        controlPoints[2] = { x: x - 5, y: y + height - 5 };\n        controlPoints[3] = { x: x + width - 5, y: y + height - 5 };\n        controlPoints[4] = { x: x + width / 2 - 5, y: y - 5 };\n        controlPoints[5] = { x: x + width / 2 - 5, y: y + height - 5 };\n        controlPoints[6] = { x: x - 5, y: y + height / 2 - 5 };\n        controlPoints[7] = { x: x + width - 5, y: y + height / 2 - 5 };\n        controlPoints[8] = { x: x + width / 2 - 5, y: y - 40 };\n        ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n\n        drawRectBox(ctx, x, y, width, height, realRotate);\n        drawControl(\n          ctx,\n          controlPoints,\n          x,\n          y,\n          width,\n          height,\n          realRotate,\n          (data) => (lines = data)\n        );\n      } else if (controlIndex! === 8) {\n        const centerX = x + width / 2;\n        const centerY = y + height / 2;\n        realRotate =\n          (Math.PI / 180) *\n          (((Math.atan2(e.offsetX - centerX, e.offsetY - centerY) / Math.PI) *\n            -180 +\n            180) %\n            360);\n        ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n        isRectSelected = true;\n        drawRectBox(ctx, x, y, width, height, realRotate);\n        drawControl(\n          ctx,\n          controlPoints,\n          x,\n          y,\n          width,\n          height,\n          realRotate,\n          (data) => (lines = data)\n        );\n      }\n    }\n    if (isDrag) {\n      x += e.movementX;\n      y += e.movementY;\n      // ['tl', 'tr', 'bl', 'br', 'tc', 'bc', 'lc', 'rc', 'rp']\n      controlPoints[0] = { x: x - 5, y: y - 5 };\n      controlPoints[1] = { x: x + width - 5, y: y - 5 };\n      controlPoints[2] = { x: x - 5, y: y + height - 5 };\n      controlPoints[3] = { x: x + width - 5, y: y + height - 5 };\n      controlPoints[4] = { x: x + width / 2 - 5, y: y - 5 };\n      controlPoints[5] = { x: x + width / 2 - 5, y: y + height - 5 };\n      controlPoints[6] = { x: x - 5, y: y + height / 2 - 5 };\n      controlPoints[7] = { x: x + width - 5, y: y + height / 2 - 5 };\n      controlPoints[8] = { x: x + width / 2 - 5, y: y - 40 };\n      ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n      drawRectBox(ctx, x, y, width, height, realRotate);\n      drawControl(\n        ctx,\n        controlPoints,\n        x,\n        y,\n        width,\n        height,\n        realRotate,\n        (data) => (lines = data)\n      );\n    }\n\n    if (isRectSelected) {\n      getControlIndex(\n        e,\n        canvasDom,\n        controlPoints,\n        realRotate,\n        x,\n        y,\n        width,\n        height\n      );\n    }\n  };\n};\n\nexport default useDrawRect;\n","import { lineBox, pointBox } from '../../draw/drawRect';\nconst shapeTypes = [3, 4, 5, 6, 30, 100]; // 多边形边数\nconst FPSTIME = 30; // 每多少帧刷新一下FPS\nconst _window: any = window;\nconst optionObj = {\n  showFilter: false, // 是否开启模糊\n  countArr: [100, 1000, 5000, 10000, 50000, 100000], // 图形数量的选项\n};\n// 选项的x点\nconst TEXTX = 10;\n// 每行选项的高度\nconst TEXTHEIGHT = 25;\n// 选项框的宽高\nconst itemW = TEXTHEIGHT / 1.3;\n// 图形数量选项框的四个顶点的坐标\nlet optionPoints: IOptionPoints[] = [];\n// 开启模糊的选项框四个顶点的坐标\nlet filterPoints: IOptionPoints;\n// 选中的图形数量的选项坐标\nlet clickIndex: number = 0;\n// 多边形数量\nlet count = optionObj.countArr[clickIndex];\n\ninterface IOptionPoints {\n  tl: {\n    x: number;\n    y: number;\n  };\n  tr: {\n    x: number;\n    y: number;\n  };\n  bl: {\n    x: number;\n    y: number;\n  };\n  br: {\n    x: number;\n    y: number;\n  };\n}\n\nexport default function performanceTest(\n  ctx: CanvasRenderingContext2D,\n  canvasDom: HTMLCanvasElement,\n  callback: ({ newRafId: number }) => void\n) {\n  let time = 0;\n  let i = 0;\n  let oldFps = 0;\n  ctx.restore();\n  optionObj.countArr.forEach((item, index) => {\n    optionPoints.push({\n      tl: { x: TEXTX, y: TEXTHEIGHT * (index + 1.3) },\n      tr: { x: TEXTX + itemW, y: TEXTHEIGHT * (index + 1.3) },\n      bl: { x: TEXTX, y: TEXTHEIGHT * (index + 1.3) + itemW },\n      br: { x: TEXTX + itemW, y: TEXTHEIGHT * (index + 1.3) + itemW },\n    });\n  });\n\n  filterPoints = {\n    tl: { x: TEXTX, y: TEXTHEIGHT * (optionObj.countArr.length + 1.3) },\n    tr: { x: TEXTX + itemW, y: TEXTHEIGHT * (optionObj.countArr.length + 1.3) },\n    bl: { x: TEXTX, y: TEXTHEIGHT * (optionObj.countArr.length + 1.3) + itemW },\n    br: {\n      x: TEXTX + itemW,\n      y: TEXTHEIGHT * (optionObj.countArr.length + 1.3) + itemW,\n    },\n  };\n\n  // 判断是否选中\n  canvasDom.onclick = (e) => {\n    let eventX = e.offsetX;\n    let eventY = e.offsetY;\n    optionPoints.forEach((item, index) => {\n      const lines = lineBox(item);\n      if (pointBox({ x: eventX, y: eventY }, lines)) {\n        clickIndex = index;\n        count = optionObj.countArr[clickIndex];\n      }\n    });\n    // 判断是否点击中模糊\n    const filterLines = lineBox(filterPoints);\n    if (pointBox({ x: eventX, y: eventY }, filterLines)) {\n      optionObj.showFilter = !optionObj.showFilter;\n    }\n  };\n\n  ctx.save();\n  requestAnimationFrame(() =>\n    draw(ctx, canvasDom, ({ upDateTime, newRafId }) => {\n      callback({ newRafId });\n      if (time) {\n        const fps = Number((1 / ((upDateTime - time) / 1000)).toFixed(0));\n        time = upDateTime;\n        ctx.save();\n        ctx.filter = 'blur(0)';\n        ctx.fillStyle = 'rgba(255,255,255,0.9)';\n        ctx.fillRect(0, 0, 130, TEXTHEIGHT * (optionObj.countArr.length + 2.5));\n        ctx.fillStyle = '#f40';\n        ctx.font = 'normal 16pt Arial';\n        if (i % FPSTIME === 0) {\n          ctx.fillText(`${fps}FPS`, TEXTX, TEXTHEIGHT);\n          oldFps = fps;\n        } else {\n          ctx.fillText(`${oldFps}FPS`, TEXTX, TEXTHEIGHT);\n        }\n        optionTab(ctx, clickIndex);\n        ctx.restore();\n      } else {\n        time = upDateTime;\n      }\n      i++;\n    })\n  );\n  ctx.restore();\n}\n\n/**\n * 选项\n */\nfunction optionTab(ctx: CanvasRenderingContext2D, clickIndex: number) {\n  ctx.save();\n  optionObj.countArr.forEach((item, index) => {\n    ctx.lineWidth = 0.1;\n    if (clickIndex === index) {\n      ctx.fillStyle = '#f40';\n      ctx.fillRect(TEXTX, TEXTHEIGHT * (index + 1.3), itemW, itemW);\n    } else {\n      ctx.fillStyle = '#000';\n      ctx.strokeRect(TEXTX, TEXTHEIGHT * (index + 1.3), itemW, itemW);\n    }\n    ctx.fillText(item.toString(), TEXTX + TEXTHEIGHT, TEXTHEIGHT * (index + 2));\n  });\n  if (optionObj.showFilter) {\n    ctx.fillStyle = '#f40';\n    ctx.fillRect(\n      TEXTX,\n      TEXTHEIGHT * (optionObj.countArr.length + 1.3),\n      itemW,\n      itemW\n    );\n  } else {\n    ctx.fillStyle = '#000';\n    ctx.strokeRect(\n      TEXTX,\n      TEXTHEIGHT * (optionObj.countArr.length + 1.3),\n      itemW,\n      itemW\n    );\n  }\n\n  ctx.fillText(\n    `${!optionObj.showFilter ? '开启模糊' : '关闭模糊'}`,\n    TEXTX + TEXTHEIGHT,\n    TEXTHEIGHT * (optionObj.countArr.length + 2)\n  );\n  ctx.restore();\n}\n\n/**\n * 绘制图形\n */\nfunction draw(\n  ctx: CanvasRenderingContext2D,\n  canvasDom: HTMLCanvasElement,\n  callback\n) {\n  const width = canvasDom.width;\n  const height = canvasDom.height;\n  ctx.save();\n  if (optionObj.showFilter) {\n    ctx.filter = 'blur(5px)';\n  }\n  // 创建离屏的 Canvasconst\n  const ofc = new _window.OffscreenCanvas(canvasDom.width, canvasDom.height);\n  const octX = ofc.getContext('2d');\n  ctx.clearRect(0, 0, width, height);\n  const shapes = createCache();\n  for (let i = 0; i < count; i++) {\n    const shape = shapes[Math.floor(Math.random() * shapeTypes.length)];\n    const x = Math.random() * width;\n    const y = Math.random() * height;\n    octX.drawImage(shape, x, y);\n  }\n  // 再将离屏Canvas图像绘制到画布上，这一次绘制采用了滤镜\n  ctx.drawImage(ofc, 0, 0);\n  ctx.restore();\n  const newRafId = requestAnimationFrame(() => draw(ctx, canvasDom, callback));\n  callback({ newRafId: newRafId, upDateTime: performance.now() });\n}\n\n/**\n * 将所有的边数shapeTypes的样子缓存到数组中\n */\nfunction createCache() {\n  const ret: any = [];\n  for (let i = 0; i < shapeTypes.length; i++) {\n    const type = shapeTypes[i];\n    // 创建离屏Canvas缓存图形\n    const cacheCanvas = new _window.OffscreenCanvas(20, 20);\n    // 将图形绘制到离屏Canvas对象上\n    const context: any = cacheCanvas.getContext('2d');\n\n    if (type >= 60) {\n      const r = Math.floor(Math.random() * 256);\n      const g = Math.floor(Math.random() * 256);\n      const b = Math.floor(Math.random() * 256);\n      context.save();\n      context.beginPath();\n      context.fillStyle = `rgb(${r},${g},${b})`;\n      context.arc(10, 10, 10, 0, Math.PI * 2);\n      context.stroke();\n      context.fill();\n      context.restore();\n    } else {\n      const points = getPoints(10, 10, 10, type);\n      drawPolygon(context, points);\n    }\n    ret.push(cacheCanvas);\n  }\n\n  // 将离屏Canvas数组（缓存对象）返回\n  return ret;\n}\n\n/**\n * 获取多边形的顶点坐标\n */\nfunction getPoints(\n  x: number,\n  y: number,\n  r: number,\n  edge: number = 3\n): number[][] {\n  let points: number[][] = [];\n  let rotate = (Math.PI * 2) / edge;\n  for (let i = 0; i < edge; i++) {\n    const edgeRotate = rotate * i;\n    const pointX: number = x + r * Math.cos(edgeRotate);\n    const pointY: number = y + r * Math.sin(edgeRotate);\n    points.push([pointX, pointY]);\n  }\n  return points;\n}\n\n/**\n * 绘制多边形\n */\nfunction drawPolygon(ctx: CanvasRenderingContext2D, points: number[][]) {\n  const r = Math.floor(Math.random() * 256);\n  const g = Math.floor(Math.random() * 256);\n  const b = Math.floor(Math.random() * 256);\n  ctx.save();\n  ctx.beginPath();\n  ctx.moveTo(points[0][0], points[0][1]);\n  for (let i = 1; i < points.length; i++) {\n    ctx.lineTo(points[i][0], points[i][1]);\n  }\n  ctx.closePath();\n  ctx.fillStyle = `rgb(${r},${g},${b})`;\n  ctx.fill();\n  ctx.restore();\n}\n","export default class Vector2D extends Array {\n  constructor(x = 1, y = 0) {\n    super(x, y);\n  }\n\n  set x(v) {\n    this[0] = v;\n  }\n\n  set y(v) {\n    this[1] = v;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  get length() {\n    return Math.hypot(this.x, this.y);\n  }\n\n  get dir() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  copy() {\n    return new Vector2D(this.x, this.y);\n  }\n\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n\n  scale(a) {\n    this.x *= a;\n    this.y *= a;\n    return this;\n  }\n\n  cross(v) {\n    return this.x * v.y - v.x * this.y;\n  }\n\n  dot(v) {\n    return this.x * v.x + v.y * this.y;\n  }\n\n  normalize() {\n    const length = Math.hypot(this.x, this.y)\n    return this.scale(1 / length);\n  }\n\n  rotate(rad) {\n    const c = Math.cos(rad),\n      s = Math.sin(rad);\n    const [x, y] = this;\n\n    this.x = x * c + y * -s;\n    this.y = x * s + y * c;\n\n    return this;\n  }\n}","import Vector2D from './vector2d'\nconst drawTree = (ctx, canvasDom) => {\n    ctx.restore();\n    ctx.save();\n    ctx.translate(0, canvasDom.height);\n    ctx.scale(1, -1);\n    ctx.lineCap = 'round';\n    const v0 = new Vector2D(canvasDom.width / 2, 0);\n    drawBranch(ctx, v0, 50, 10, 1, 3)\n    ctx.restore();\n\n    // scanHandler(ctx, canvasDom)\n\n    // computedDistance(ctx, canvasDom)\n}\n\n// 距离\nconst computedDistance = (ctx, canvasDom) => {\n    // https://xcsf.github.io/blog/2020/06/12/%E8%AE%A1%E7%AE%97%E7%82%B9%E5%88%B0%E7%BA%BF%E6%AE%B5%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB-%E7%9F%A2%E9%87%8F%E6%B3%95/\n    ctx.save()\n    // 斜率\n    const k = -2;\n    // y轴截距\n    const b = 600;\n    // 直线外的点\n    const p = { x: 300, y: 500 }\n    // 点p在直线上的投影\n    const pProject = { x: 0, y: 0 }\n    // 直线上的任意q点\n    const q = { x: 180, y: 180 * k + b }\n    // 直线上的任意r点\n    const r = { x: 255, y: 255 * k + b }\n    // 直线的方程式：kx+b-y=0\n    ctx.translate(0, canvasDom.height);\n    ctx.scale(1, -1);\n    // 当x为0，直线在y轴的点\n    const endY = k * 0 + b;\n    // 当y为0，直线在x轴的点\n    const endX = (0 - b) / k;\n\n    ctx.fillRect(q.x, q.y, 3, 3)\n    ctx.fillRect(r.x, r.y, 3, 3)\n    ctx.save()\n    ctx.translate(q.x, q.y)\n    ctx.rotate(Math.PI / 180 * 180)\n    ctx.fillText(\"Q\", 10, 0)\n    ctx.restore()\n\n    ctx.save()\n    ctx.translate(r.x, r.y)\n    ctx.rotate(Math.PI / 180 * 180)\n    ctx.fillText(\"R\", 10, 0)\n    ctx.restore()\n\n\n    // 绘制直线\n    ctx.beginPath();\n    ctx.moveTo(endX, 0);\n    ctx.lineTo(0, endY);\n    ctx.stroke();\n\n    // 绘制p点\n    ctx.beginPath();\n    ctx.arc(p.x, p.y, 3, 0, Math.PI * 2);\n    ctx.fill();\n\n    /**\n     * p点到直线的投影点pProject垂直于直线，两条垂直直线的斜率乘积为-1，由此判断p到pProject的直线斜率为-1/k\n     * 联立两个直线的方程式可以得出pProject的\n     * x点为 (k * q.x + p.x / k + p.y - q.y) / (1 / k + k)\n     * y点为 -1 / k * (pProject.x - p.x) + p.y\n     */\n    pProject.x = (k * q.x + p.x / k + p.y - q.y) / (1 / k + k);\n    pProject.y = -1 / k * (pProject.x - p.x) + p.y;\n\n    // 绘制p点在直线投影到p点的线\n    ctx.beginPath();\n    ctx.strokeStyle = \"#000\"\n    ctx.moveTo(pProject.x, pProject.y);\n    ctx.lineTo(p.x, p.y)\n    ctx.stroke();\n\n    // 求p点到直线的距离 d=|Ax0+By0+C|/√A^2+B^2\n    console.log(Math.abs(k * p.x + -1 * p.y + b) / Math.hypot(k, -1));\n\n    const cross = (r.x - q.x) * (p.x - q.x) + (p.y - q.y) * (r.y - q.y); //|qr*qp|：矢量乘\n    let pqr = 0;\n    let pqrPoint = { x: 0, y: 0 }\n    if (cross <= 0) {\n        pqr = Math.hypot(q.x - p.x, q.y - p.y); //是|qp|：矢量的大小\n        pqrPoint = { ...q }\n    } else {\n        const d2 = Math.pow(q.x - r.x, 2) + Math.pow(q.y - r.y, 2); //|qr|^2：矢量AB的大小的平方\n        if (cross >= d2) {\n            pqr = Math.hypot(r.x - p.x, r.y - p.y); //是|rp|：矢量的大小\n            pqrPoint = { ...r }\n        } else {\n            pqr = Math.abs(k * p.x + -1 * p.y + b) / Math.hypot(k, -1);\n            pqrPoint = { ...pProject }\n        }\n    }\n\n    // 绘制p点到线段qr的最短距离\n    ctx.beginPath();\n    ctx.strokeStyle = \"#f40\"\n    ctx.moveTo(pqrPoint.x, pqrPoint.y);\n    ctx.lineTo(p.x, p.y)\n    ctx.stroke();\n    ctx.restore()\n}\n\n// 扫描\nconst scanHandler = (ctx, canvasDom) => {\n    ctx.save();\n    ctx.translate(canvasDom.width / 2, canvasDom.height);\n    ctx.scale(1, -1);\n    const aX = 200 * Math.cos(Math.PI / 180 * 120);\n    const aY = 200 * Math.sin(Math.PI / 180 * 120);\n    const bX = 200 * Math.cos(Math.PI / 180 * 60);\n    const bY = 200 * Math.sin(Math.PI / 180 * 60);\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(aX, aY);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(bX, bY);\n    ctx.stroke();\n\n    canvasDom.onclick = (e) => {\n        const pointVec = [e.offsetX - canvasDom.width / 2, canvasDom.height - e.offsetY]\n        const v0 = new Vector2D(...pointVec)\n        const isRange = Math.abs(new Vector2D(0, 1).cross(v0.normalize())) <= 0.5;\n        ctx.fillStyle = isRange ? '#000' : '#f40';\n        ctx.beginPath();\n        ctx.arc(e.offsetX, e.offsetY, 3, 0, Math.PI * 2)\n        ctx.closePath()\n        ctx.fill()\n    }\n    ctx.restore();\n}\n\nconst drawBranch = (ctx, v0, length, thickness, dir, bias) => {\n    const v = new Vector2D().rotate(dir).scale(length);\n    const v1 = v0.copy().add(v);\n    ctx.lineWidth = thickness;\n    ctx.beginPath();\n    ctx.moveTo(...v0);\n    ctx.lineTo(...v1);\n    ctx.stroke();\n    if (thickness > 2) {\n        const leftRadius = Math.PI / 4 + 0.5 * (dir + 0.2) + bias * (Math.random() - 0.5);\n        const rightRadius = Math.PI / 4 + 0.5 * (dir - 0.2) + bias * (Math.random() - 0.5);\n        drawBranch(ctx, v1, length * 0.9, thickness * 0.8, leftRadius, bias * 0.9);\n        drawBranch(ctx, v1, length * 0.9, thickness * 0.8, rightRadius, bias * 0.9);\n    }\n    if (thickness < 3 && Math.random() < 0.5) {\n        ctx.save();\n        ctx.strokeStyle = '#c72c35';\n        const th = Math.random() * 6 + 3;\n        ctx.lineWidth = th;\n        ctx.beginPath();\n        ctx.moveTo(...v1);\n        ctx.lineTo(v1.x, v1.y - 2);\n        ctx.stroke();\n        ctx.restore();\n    }\n}\n\nexport default drawTree","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useRef, useEffect, useContext, useState } from 'react';\nimport styles from './index.module.scss';\nimport { ContextData } from '../../globalState';\nimport drawRect from '../draw/drawRect';\nimport drawTree from '../drawTree/drawTree';\nimport performanceTest from './drawUtils/performanceTest';\n\nfunction ShowPattern(): JSX.Element {\n  const canvasWrapRef = useRef<any>(null);\n  const canvasRef = useRef<any>(null);\n  const webglRef = useRef<any>(null);\n  const [showCanvas, setShowCanvas] = useState(true);\n  const rafId = useRef<number>();\n\n  let pointsArr: number[] = [];\n\n  // 眼睛的位置\n  const eyePosition = { eyeBallX: 480, eyeBallY: 230 };\n\n  const { state, dispatch } = useContext(ContextData);\n\n  //   初始化将canvas的宽高和父元素的一样\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const { width, height } = canvasWrapRef.current.getBoundingClientRect();\n    canvasRef.current.width = width;\n    canvasRef.current.height = height;\n    webglRef.current.width = width;\n    webglRef.current.height = height;\n  }, []);\n\n  //   canvas配置改变时绘图\n  useEffect(() => {\n    if (!state.drawType || state.drawType === '0') {\n      return;\n    }\n    const canvasDom = canvasRef.current;\n    const ctx = canvasDom.getContext('2d');\n    const {\n      drawType,\n      fillColor,\n      strokeColor,\n      lineW,\n      lineType,\n      shadowBlur,\n      shadowOffsetX,\n      shadowOffsetY,\n      shadowColor,\n      scale, // 缩放\n      rotate, // 旋转\n      opacity, // 不透明度\n      textInput, // 文本内容\n      imgUrl, // 图片地址\n      sliceX, // 切片X\n      sliceY, // 切片Y\n      originX, // 原点坐标X\n      originY, // 原点坐标Y\n      fontSize, // 文本字体大小\n      textAlign, // 文本对齐方式\n      textBaseline, // 文本基线对齐\n      textDir, // 文本方向\n    } = state;\n    const realScale = scale * 0.02;\n    const realRotate = rotate * 3.6 * (Math.PI / 180);\n    const realOpacity = opacity * 0.01;\n    cancelAnimationFrame(rafId.current || 0);\n    ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n    canvasDom.onclick = null;\n    canvasDom.onmousedown = null;\n    canvasDom.onmousemove = null;\n    canvasDom.onmouseup = null;\n    canvasDom.removeEventListener('mousemove', eyeBallMove);\n    canvasDom.addEventListener('mouseleave', () => {\n      canvasDom.removeEventListener('mousemove', eyeBallMove);\n    });\n    webglRef.current.onclick = null;\n    setShowCanvas(true);\n\n    ctx.save();\n    ctx.globalAlpha = realOpacity;\n\n    // 绘制阴影\n    ctx.shadowColor = shadowColor;\n    ctx.shadowBlur = shadowBlur;\n    ctx.shadowOffsetX = shadowOffsetX;\n    ctx.shadowOffsetY = shadowOffsetY;\n\n    ctx.fillStyle = fillColor;\n    ctx.strokeStyle = strokeColor;\n    // lineWidth明明是设置线宽，最小只能到1\n    ctx.lineWidth = lineW === 0 ? 1 : lineW;\n    // 实线和虚线切换\n    if (lineType === 'dash') {\n      ctx.setLineDash([3]); // [实线长度, 间隙长度]\n      ctx.lineDashOffset = 0;\n    } else {\n      ctx.setLineDash([]);\n    }\n    ctx.translate(canvasDom.width / 2, canvasDom.height / 2);\n    ctx.scale(realScale, realScale);\n    ctx.rotate(realRotate);\n    switch (drawType) {\n      case 'reset':\n        ctx.rotate((Math.PI / 180) * -realRotate);\n        ctx.translate(-canvasDom.width / 2, -canvasDom.height / 2);\n        ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n        break;\n      case '1':\n        drawTriangle(ctx);\n        break;\n      case '2':\n        drawLine(ctx);\n        break;\n      case '3':\n        drawArc(ctx);\n        break;\n      case '4':\n        drawText(ctx, textInput, fontSize, textAlign, textBaseline, textDir);\n        break;\n      case '5':\n        ctx.restore();\n        canvasDom.removeEventListener('mousemove', eyeBallMove);\n        canvasDom.addEventListener('mousemove', eyeBallMove);\n        drawDuola(ctx, eyePosition.eyeBallX, eyePosition.eyeBallY);\n        break;\n      case '8':\n        drawQuadratic(ctx);\n        break;\n      case '9':\n        drawBezier(ctx);\n        break;\n      case '10':\n        drawImageHandler(\n          ctx,\n          canvasDom,\n          realScale,\n          realRotate,\n          imgUrl,\n          sliceX,\n          sliceY,\n          originX,\n          originY\n        );\n        break;\n      case '11':\n        drawTree(ctx, canvasDom);\n        break;\n      case '12':\n        performanceTest(ctx, canvasDom, ({ newRafId }) => {\n          rafId.current = newRafId;\n        });\n        break;\n      default:\n        pointsArr = [];\n        setShowCanvas(false);\n        break;\n    }\n    ctx.restore();\n  }, [state]);\n\n  useEffect(() => {\n    if (!state.drawType) {\n      return;\n    }\n    const canvasDom = canvasRef.current;\n    const ctx = canvasDom.getContext('2d');\n    if (state.drawType !== '0') {\n      return;\n    }\n    ctx.clearRect(0, 0, canvasDom.width, canvasDom.height);\n    drawRect(ctx, canvasDom, state, '', (rectParams, rotateData) => {\n      dispatch({\n        type: 'changeRect',\n        data: rectParams,\n      });\n\n      if (\n        rotateData &&\n        'rotate' in rotateData &&\n        typeof rotateData.rotate === 'number'\n      ) {\n        dispatch({\n          type: 'changeState',\n          data: rotateData,\n        });\n      }\n    });\n  }, [state.drawType]);\n\n  useEffect(() => {\n    if (!state.drawType) {\n      return;\n    }\n    const canvasDom = canvasRef.current;\n    const ctx = canvasDom.getContext('2d');\n    if (state.drawType !== '0') {\n      return;\n    }\n    drawRect(ctx, canvasDom, state, 'rotate', (rectParams, rotateData) => {\n      dispatch({\n        type: 'changeRect',\n        data: rectParams,\n      });\n\n      if (\n        rotateData &&\n        'rotate' in rotateData &&\n        typeof rotateData.rotate === 'number'\n      ) {\n        dispatch({\n          type: 'changeState',\n          data: rotateData,\n        });\n      }\n    });\n  }, [state.rotate]);\n\n  useEffect(() => {\n    const { drawType } = state;\n    if (!showCanvas) {\n      const webgl = webglRef.current;\n      const gl = webgl.getContext('webgl');\n      gl.clear(gl.COLOR_BUFFER_BIT);\n      switch (drawType) {\n        case '6':\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          webglDraw(gl);\n          break;\n        case '7':\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          webglRef.current.onclick = null;\n          webglRef.current.onclick = (e) => webglClickDraw(e, gl);\n          break;\n      }\n    }\n  }, [showCanvas, state.drawType]);\n\n  /**\n   * 绘制三角形\n   */\n  const drawTriangle = (ctx) => {\n    ctx.beginPath();\n    ctx.moveTo(-50, -50);\n    ctx.lineTo(-50, 50);\n    ctx.lineTo(50, 50);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  /**\n   * 绘制直线\n   */\n  const drawLine = (ctx) => {\n    ctx.beginPath();\n    ctx.moveTo(-50, 0);\n    ctx.lineTo(50, 0);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  /**\n   * 绘制圆形\n   */\n  const drawArc = (ctx) => {\n    ctx.beginPath();\n    ctx.arc(0, 0, 50, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  /**\n   * 绘制文本\n   */\n  const drawText = (\n    ctx,\n    textInput,\n    fontSize,\n    textAlign,\n    textBaseline,\n    textDir\n  ) => {\n    ctx.beginPath();\n    // 绘制文本\n    ctx.font = `${fontSize}px sans-serif`;\n    ctx.direction = textDir;\n    ctx.textAlign = textAlign;\n    ctx.textBaseline = textBaseline;\n    ctx.fillText(textInput, -100, -Number(fontSize) / 2);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n  };\n\n  /**\n   * 绘制二次贝塞尔曲线\n   */\n  const drawQuadratic = (ctx) => {\n    ctx.beginPath();\n    ctx.moveTo(50, 50);\n    ctx.quadraticCurveTo(35, 0, 20, 10);\n    ctx.quadraticCurveTo(0, 25, 8, 60);\n    ctx.quadraticCurveTo(20, 90, 50, 100);\n    ctx.quadraticCurveTo(85, 85, 92, 60);\n    ctx.quadraticCurveTo(100, 20, 80, 10);\n    ctx.quadraticCurveTo(65, 0, 50, 50);\n    ctx.stroke();\n    ctx.fill();\n  };\n\n  /**\n   * 绘制三次贝塞尔曲线\n   */\n  const drawBezier = (ctx) => {\n    ctx.beginPath();\n    ctx.moveTo(50, 50);\n    ctx.bezierCurveTo(35, 10, 10, 30, 10, 40);\n    ctx.bezierCurveTo(0, 60, 40, 100, 50, 100);\n    ctx.bezierCurveTo(60, 100, 100, 60, 90, 40);\n    ctx.bezierCurveTo(75, 10, 50, 40, 50, 50);\n    ctx.stroke();\n    ctx.fill();\n  };\n\n  /**\n   * 绘制图片\n   */\n  const drawImageHandler = (\n    ctx,\n    canvasDom,\n    realScale,\n    realRotate,\n    imgUrl,\n    sliceX,\n    sliceY,\n    originX,\n    originY\n  ) => {\n    const { width, height } = canvasDom;\n    ctx.restore();\n    const img = new Image();\n    img.src = imgUrl;\n    img.onload = () => {\n      ctx.save();\n      ctx.clearRect(0, 0, width, height);\n      const imgW = 400;\n      const imgH = 400;\n      const translateX = (imgW * realScale) / 2 + originX;\n      const translateY = (imgH * realScale) / 2 + originY;\n      ctx.translate(translateX, translateY);\n      ctx.rotate(realRotate);\n      ctx.translate(-translateX, -translateY);\n      ctx.drawImage(\n        img,\n        sliceX,\n        sliceY,\n        imgW * realScale,\n        imgH * realScale,\n        originX,\n        originY,\n        imgW * realScale,\n        imgH * realScale\n      );\n\n      ctx.restore();\n    };\n  };\n\n  let timer;\n  const eyeBallMove = (e) => {\n    const newEyePosition = { ...eyePosition };\n    timer && clearTimeout(timer);\n    timer = setTimeout(() => {\n      const { x, y } = canvasRef.current.getBoundingClientRect();\n      const moveX = e.clientX - x;\n      const moveY = e.clientY - y;\n      const minX = 472 - 30 + 14 + 5; // x轴最小值\n      const maxX = 472 + 30 - 14 - 5; // x轴最大值\n      const minY = 220 - 40 + 14 + 5; // y轴最小值\n      const maxY = 220 + 40 - 14 - 5; // y轴最大值\n      // 勾股定理求距离\n      const distance = Math.sqrt(\n        Math.pow(moveX - newEyePosition.eyeBallX, 2) +\n          Math.pow(moveY - newEyePosition.eyeBallY, 2)\n      );\n      // 定时器的速度\n      const timeSpeed = 30;\n      // 眼球移动的速度\n      const eyeBallSpeed = 5;\n      // 边界计算\n      let count = 0;\n      // 总时间\n      let distanceTime = distance / eyeBallSpeed;\n      // x轴的速度\n      let eyeBallSpeedX = (moveX - newEyePosition.eyeBallX) / distanceTime;\n      // y轴的速度\n      let eyeBallSpeedY = (moveY - newEyePosition.eyeBallY) / distanceTime;\n\n      let _timer;\n      clearInterval(_timer);\n      _timer = setInterval(() => {\n        const { eyeBallX, eyeBallY } = newEyePosition;\n        // 如果边界计算超过2说明x轴和y轴都已到达边界\n        if (count >= 2) {\n          clearInterval(_timer);\n        }\n\n        let ctx = canvasRef.current.getContext('2d');\n\n        newEyePosition.eyeBallX += eyeBallSpeedX;\n        newEyePosition.eyeBallY += eyeBallSpeedY;\n\n        if (eyeBallX >= maxX) {\n          newEyePosition.eyeBallX = maxX;\n          count++;\n        } else if (eyeBallX <= minX) {\n          newEyePosition.eyeBallX = minX;\n          count++;\n        }\n\n        if (eyeBallY >= maxY) {\n          newEyePosition.eyeBallY = maxY;\n          count++;\n        } else if (eyeBallY <= minY) {\n          newEyePosition.eyeBallY = minY;\n          count++;\n        }\n        drawDuola(ctx, newEyePosition.eyeBallX, newEyePosition.eyeBallY);\n      }, timeSpeed);\n    }, 100);\n  };\n\n  /**\n   * 绘制哆啦A梦\n   */\n  const drawDuola = (ctx, eyeBallX, eyeBallY) => {\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    // 绘制阴影\n    ctx.shadowColor = 'rgba(0,0,0,0)';\n\n    ctx.lineWidth = 3;\n    // 蓝脸\n    ctx.beginPath();\n    ctx.arc(500, 300, 150, Math.PI * 0.8, Math.PI * 2.2);\n    ctx.fillStyle = '#00a0de';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 白脸\n    ctx.beginPath();\n    ctx.arc(500, 324, 110, Math.PI * 0.8, Math.PI * 2.2);\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 左眼\n    ctx.beginPath();\n    ctx.ellipse(472, 220, 40, 30, Math.PI * 0.5, 0, Math.PI * 2);\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 右眼\n    ctx.beginPath();\n    ctx.ellipse(532, 220, 40, 30, Math.PI * 2.5, 0, Math.PI * 2);\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 左眼球\n    ctx.beginPath();\n    ctx.arc(eyeBallX, eyeBallY, 14, 0, Math.PI * 2);\n    ctx.fillStyle = '#000';\n    ctx.fill();\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.arc(eyeBallX + 5, eyeBallY + 5, 5, 0, Math.PI * 2);\n    ctx.fillStyle = '#fff';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 右眼球\n    ctx.beginPath();\n    ctx.lineWidth = 5;\n    ctx.arc(528, 240, 14, Math.PI * 1.1, Math.PI * 1.9);\n    ctx.stroke();\n    ctx.lineWidth = 3;\n\n    // 鼻子\n    ctx.beginPath();\n    ctx.arc(502, 265, 18, 0, Math.PI * 2);\n    ctx.fillStyle = '#e70010';\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n\n    // 脸中线\n    ctx.beginPath();\n    ctx.moveTo(502, 287);\n    ctx.lineTo(502, 366);\n    ctx.closePath();\n    ctx.stroke();\n\n    // 嘴\n    ctx.beginPath();\n    ctx.arc(502, 280, 100, Math.PI * 0.2, Math.PI * 0.8);\n    ctx.stroke();\n\n    // 左侧胡须\n    ctx.beginPath();\n    ctx.moveTo(420, 285);\n    ctx.lineTo(480, 295);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(420, 305);\n    ctx.lineTo(480, 305);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(420, 325);\n    ctx.lineTo(480, 315);\n    ctx.stroke();\n\n    // 右侧侧胡须\n    ctx.beginPath();\n    ctx.moveTo(524, 295);\n    ctx.lineTo(584, 285);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(524, 305);\n    ctx.lineTo(584, 305);\n    ctx.stroke();\n\n    ctx.beginPath();\n    ctx.moveTo(524, 315);\n    ctx.lineTo(584, 325);\n    ctx.stroke();\n\n    // 脖子\n    ctx.beginPath();\n    ctx.lineCap = 'round';\n    ctx.lineWidth = 1;\n    ctx.fillStyle = '#e70010';\n    ctx.moveTo(370, 389);\n    ctx.lineTo(630, 389);\n    ctx.lineTo(630, 405);\n    ctx.lineTo(370, 405);\n    ctx.fill();\n    ctx.closePath();\n    ctx.stroke();\n  };\n\n  /**\n   * webgl绘制点\n   */\n  const webglDraw = (gl) => {\n    const vs = `\n        void main(){\n            gl_Position  = vec4(0.0,0.0,1.0,1.0);\n            gl_PointSize  = 40.0;\n        }\n    `;\n    const fs = `\n        void main(){\n            gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n        }\n    `;\n    const vsShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vsShader, vs);\n    gl.compileShader(vsShader);\n\n    const fsShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fsShader, fs);\n    gl.compileShader(fsShader);\n\n    const program = gl.createProgram();\n    gl.attachShader(program, vsShader);\n    gl.attachShader(program, fsShader);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n\n    gl.drawArrays(gl.POINTS, 0, 1);\n  };\n\n  /**\n   * 点击绘制点\n   */\n  const webglClickDraw = (e, gl) => {\n    const { x, y, width, height } = webglRef.current.getBoundingClientRect();\n    const pointX = Number(((e.pageX - x) / width - 0.5) * 2);\n    const pointY = Number(-((e.pageY - y) / height - 0.5) * 2);\n\n    const vs = `\n        attribute vec2 a_position;\n        void main(){\n            gl_Position  = vec4(a_position,1.0,1.0);\n            gl_PointSize  = 40.0;\n        }\n    `;\n    const fs = `\n        void main(){\n            gl_FragColor = vec4(1.0,0.0,0.0,1.0);\n        }\n    `;\n    const vsShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vsShader, vs);\n    gl.compileShader(vsShader);\n\n    const fsShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fsShader, fs);\n    gl.compileShader(fsShader);\n\n    const program = gl.createProgram();\n    gl.attachShader(program, vsShader);\n    gl.attachShader(program, fsShader);\n    gl.linkProgram(program);\n    gl.useProgram(program);\n\n    pointsArr.push(...[pointX, pointY]);\n    const point = [...pointsArr];\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(point), gl.STATIC_DRAW);\n\n    const a_position = gl.getAttribLocation(program, 'a_position');\n    gl.vertexAttribPointer(a_position, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(a_position);\n    gl.drawArrays(gl.POINTS, 0, point.length / 2);\n  };\n\n  return (\n    <div ref={canvasWrapRef} className={styles.showPattern_wrap}>\n      <canvas ref={canvasRef}></canvas>\n      <canvas\n        ref={webglRef}\n        className={styles.webgl_canvas}\n        style={{ display: showCanvas ? 'none' : 'block' }}\n      ></canvas>\n    </div>\n  );\n}\n\nexport default ShowPattern;\n","import React, { useReducer } from \"react\";\nimport styles from \"./index.module.scss\";\nimport CanvasSetting from \"../../components/CanvasSetting\";\nimport ShowPattern from \"../../components/ShowPattern\";\nimport { reducer, ContextData, initData } from \"../../globalState\"; //引入useReducer文件\n\nconst menuList = [\n  {\n    key: \"0\",\n    text: \"绘制矩形\",\n  },\n  {\n    key: \"1\",\n    text: \"绘制三角形\",\n  },\n  {\n    key: \"2\",\n    text: \"绘制直线\",\n  },\n  {\n    key: \"3\",\n    text: \"绘制圆形\",\n  },\n  {\n    key: \"4\",\n    text: \"绘制文本\",\n  },\n  // {\n  //   key: \"6\",\n  //   text: \"webgl绘制点\",\n  // },\n  // {\n  //   key: \"7\",\n  //   text: \"webgl点击绘制点\",\n  // },\n  {\n    key: \"8\",\n    text: \"二次贝塞尔曲线\",\n  },\n  {\n    key: \"9\",\n    text: \"三次贝塞尔曲线\",\n  },\n  {\n    key: \"10\",\n    text: \"绘制图片\",\n  },\n  {\n    key: \"5\",\n    text: \"绘制哆啦A梦\",\n  },\n  {\n    key: \"11\",\n    text: \"绘制树\",\n  },\n  {\n    key: \"12\",\n    text: \"性能检测\",\n  },\n];\n\nfunction App(): JSX.Element {\n  const [state, dispatch] = useReducer(reducer, initData);\n\n  return (\n    <ContextData.Provider\n      value={{\n        state,\n        dispatch, // 把 dispatch 也作为 context 的一部分共享下去，从而在嵌套组件中调用以实现更新顶层的 state\n      }}\n    >\n      <div className={styles.app}>\n        <section className={styles.app_left}>\n          <h1 className={styles.left_title}>Canvas实验室</h1>\n          <ul className={styles.menu_list}>\n            {menuList.map(item => {\n              return (\n                <li\n                  key={item.key}\n                  className={`${styles.menu_item} ${\n                    item.key === state.drawType ? styles.menu_item_active : \"\"\n                  }`}\n                  onClick={() =>\n                    dispatch({\n                      type: \"changeState\",\n                      data: { drawType: item.key },\n                    })\n                  }\n                >\n                  {item.text}\n                </li>\n              );\n            })}\n          </ul>\n        </section>\n        <section className={styles.app_right}>\n          <div className={styles.canvas_settings}>\n            <CanvasSetting />\n          </div>\n          <div className={styles.canvas_wrap}>\n            <ShowPattern />\n          </div>\n        </section>\n      </div>\n    </ContextData.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/reset.css';\nimport App from './pages/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setting_wrap\":\"CanvasSetting_setting_wrap__3XjHu\",\"title_wrap\":\"CanvasSetting_title_wrap__2uPIl\",\"setting_title\":\"CanvasSetting_setting_title__qchkB\",\"reset_btn\":\"CanvasSetting_reset_btn__2I2Wv\",\"setting_main\":\"CanvasSetting_setting_main__1u97m\",\"select_diy\":\"CanvasSetting_select_diy__2LHIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1x3uo\",\"app_left\":\"App_app_left__2Ruzl\",\"left_title\":\"App_left_title__nH2Ue\",\"menu_list\":\"App_menu_list__1Mvcp\",\"menu_item\":\"App_menu_item__aIb5C\",\"menu_item_active\":\"App_menu_item_active__ByxJO\",\"app_right\":\"App_app_right__j65vA\",\"canvas_settings\":\"App_canvas_settings__ZqK7P\",\"canvas_wrap\":\"App_canvas_wrap__2xupN\"};"],"sourceRoot":""}